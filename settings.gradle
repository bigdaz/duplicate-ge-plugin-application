pluginManagement {
    includeBuild 'build-src'
}

plugins {
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.9'
    id 'reproducer.enterprise'
}

gradleEnterprise {
    server = "https://ge.solutions-team.gradle.com"
    buildScan {
        capture { taskInputFiles = true }
        publishAlways()
        obfuscation {
            ipAddresses { addresses -> addresses.collect { address -> "0.0.0.0" } }
        }
    }
}

buildCache {
    local {
        enabled = true
    }

    remote(gradleEnterprise.buildCache) {
        enabled = true
        // push = true
    }
}

println()
if (settings.gradle.startParameter.isBuildScan()) {
    println "Gradle invocation DID include --scan"
} else {
    println "Gradle invocation DID NOT include --scan"
}

def buildscriptClasspath = buildscript.configurations.classpath.incoming.files

def geJar = buildscriptClasspath.find { it.name.startsWith('gradle-enterprise-gradle-plugin') }
println "\nGE jar"
println "------------------------------"
println geJar.name

def cp = buildscriptClasspath.collect { it.name }.join("\n")
gradleEnterprise.buildScan.value "settings.buildscript.classpath", cp
println "\nsettings.buildscript.classpath"
println "------------------------------"
println cp

rootProject.name = 'scan-plugin-reproducer'
